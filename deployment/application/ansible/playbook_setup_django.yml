---
- name: Deploy Django Application
  hosts: [django_boilerplate_backend_webserver]

  vars_files:
    - vars.yml

  vars:
    virtualenv_path: "{{ remote_project_path }}/venv"
    python: "{{ virtualenv_path }}/bin/python"
    pip: "{{ virtualenv_path }}/bin/pip"

  tasks:
    - name: Update and upgrade Apt
      become: true
      apt:
        update_cache: yes
        upgrade: yes
      tags: ['setup', 'update_packages', 'deploy']

    - name: Install APT Packages
      become: true
      apt: name={{ item }} update_cache=yes state=latest
      loop: [
        # Build Deps
        'g++',
        'libffi-dev',
        'gnupg2',
        'build-essential',
        'libpq-dev',
        'postgresql-client',
        'python3.9',
        'python3-dev',
        'python3.9-dev',
        'python3-pip',
        'python3.9-venv',
        'python3-testresources',
        'python-is-python3',
        'python-dev-is-python3',
        'libpython3.9',
      ]
      tags: ['setup', 'update_packages', 'deploy']

    - name: Create project directory
      file:
        path: "{{ remote_project_path }}"
        state: directory
      tags: ['setup']

    - name: Create project's log directory
      become: true
      file:
        path: "/var/log/django"
        state: directory
        owner: "{{ ubuntu_user }}"
        group: www-data
      tags: ['setup']

    - name: Copy project files
      synchronize:
        src: "{{ local_project_path }}"
        dest: "{{ remote_project_path }}/.."
      vars:
        rsync_opts: [--exclude=.git*]
      tags: ['setup', 'deploy', 'quick_deploy']

    - name: Configure Django environment settings
      copy:
        remote_src: True
        src: "{{ remote_project_path }}/deployment/application/config_files/.env.production"
        dest: "{{ remote_project_path }}/.env"
      tags: ['setup', 'deploy', 'quick_deploy']

    - name: Create virtual environment
      shell: python3.9 -m venv {{ virtualenv_path }}
      tags: ['setup', 'deploy', 'quick_deploy']

    - name: Activate virtual environment
      shell: . {{ virtualenv_path }}/bin/activate
      tags: ['setup', 'deploy', 'quick_deploy']

    - name: Upgrade pip
      shell: "{{ pip }} install --upgrade pip"
      tags: ['setup']

    - name: Install pip requirements
      shell: "{{ pip }} install -r {{ remote_project_path }}/requirements.txt"
      tags: ['setup', 'deploy', 'quick_deploy']

    - name: Collect static files
      shell: "{{ python }} {{ remote_project_path }}/manage.py collectstatic --noinput"
      tags: ['setup', 'deploy', 'quick_deploy']

    - name: Run Migrations
      shell: "{{ python }} {{ remote_project_path }}/manage.py migrate"
      tags: ['setup', 'deploy', 'quick_deploy']

    - name: Restart Gunicorn
      become: true
      systemd:
        name: gunicorn
        state: restarted
      tags: ['deploy', 'quick_deploy']

    - name: Restart Celery
      become: true
      systemd:
        name: celery
        state: restarted
      tags: ['deploy', 'quick_deploy']
